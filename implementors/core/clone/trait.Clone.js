(function() {var implementors = {};
implementors["regular"] = [{"text":"impl&lt;B:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"regular/util/struct.FixedBitSet.html\" title=\"struct regular::util::FixedBitSet\">FixedBitSet</a>&lt;B&gt;","synthetic":false,"types":["regular::util::bit_set::FixedBitSet"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"regular/util/struct.SetPartitions.html\" title=\"struct regular::util::SetPartitions\">SetPartitions</a>&lt;A&gt;","synthetic":false,"types":["regular::util::set_partition::SetPartitions"]},{"text":"impl&lt;Sym:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"regular/util/trait.Step.html\" title=\"trait regular::util::Step\">Step</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"regular/util/enum.Range.html\" title=\"enum regular::util::Range\">Range</a>&lt;Sym&gt;","synthetic":false,"types":["regular::util::step::Range"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"regular/util/struct.VecSet.html\" title=\"struct regular::util::VecSet\">VecSet</a>&lt;A&gt;","synthetic":false,"types":["regular::util::vec_set::VecSet"]}];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()