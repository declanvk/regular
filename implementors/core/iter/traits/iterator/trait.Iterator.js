(function() {var implementors = {};
implementors["regular"] = [{"text":"impl&lt;IL, IR, T, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"regular/util/struct.Join.html\" title=\"struct regular::util::Join\">Join</a>&lt;T, IL, IR, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;IR: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/struct.Peekable.html\" title=\"struct core::iter::adapters::Peekable\">Peekable</a>&lt;IL&gt;, &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/struct.Peekable.html\" title=\"struct core::iter::adapters::Peekable\">Peekable</a>&lt;IR&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":["regular::util::join_iter::Join"]},{"text":"impl&lt;Sym&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"enum\" href=\"regular/util/enum.Range.html\" title=\"enum regular::util::Range\">Range</a>&lt;Sym&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Sym: <a class=\"trait\" href=\"regular/util/trait.Step.html\" title=\"trait regular::util::Step\">Step</a>,&nbsp;</span>","synthetic":false,"types":["regular::util::step::Range"]}];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()